<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="3579" started-at="2021-02-18T12:38:31Z" finished-at="2021-02-18T12:38:34Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="3579" started-at="2021-02-18T12:38:31Z" finished-at="2021-02-18T12:38:34Z">
      <class name="com.RunnerClass.CucumberRunner">
        <test-method status="PASS" signature="intializeReport()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="intializeReport" is-config="true" duration-ms="162" started-at="2021-02-18T18:08:30Z" finished-at="2021-02-18T18:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intializeReport -->
        <test-method status="PASS" signature="startTest()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="startTest" is-config="true" duration-ms="6" started-at="2021-02-18T18:08:31Z" finished-at="2021-02-18T18:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="setUpClass" is-config="true" duration-ms="281" started-at="2021-02-18T18:08:31Z" finished-at="2021-02-18T18:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="feature" duration-ms="2551" started-at="2021-02-18T18:08:31Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2021-02-18T18:08:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Title of your feature]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="tearDownClass" is-config="true" duration-ms="12" started-at="2021-02-18T18:08:34Z" finished-at="2021-02-18T18:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="endTest" is-config="true" duration-ms="631" started-at="2021-02-18T18:08:34Z" finished-at="2021-02-18T18:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="FAIL" signature="flushreport()[pri:0, instance:com.RunnerClass.CucumberRunner@77cd7a0]" name="flushreport" is-config="true" duration-ms="0" started-at="2021-02-18T18:08:34Z" finished-at="2021-02-18T18:08:34Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
	at com.google.common.base.Preconditions.checkState(Preconditions.java:754)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:124)
	at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:41)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:141)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)
	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:158)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:120)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
	at com.RunnerClass.CucumberRunner.flushreport(CucumberRunner.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:329)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushreport -->
      </class> <!-- com.RunnerClass.CucumberRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
